# Sample subset of the IRIS dataset: [sepal_length, petal_length], label
# 0 = Setosa, 1 = Non-Setosa (combined Versicolor + Virginica for binary classification)

data = [
    [4.9, 1.4, 0],
    [5.1, 1.5, 0],
    [5.0, 1.3, 0],
    [6.4, 4.5, 1],
    [6.9, 4.9, 1],
    [7.1, 5.9, 1],
    [5.5, 4.0, 1],
    [6.0, 5.1, 1]
]

# Split features and labels
X = [d[:-1] for d in data]
y = [d[-1] for d in data]

# Initialize perceptron weights and bias
weights = [0.0, 0.0]
bias = 0.0
lr = 0.1  # learning rate
epochs = 20

# Perceptron training
for epoch in range(epochs):
    for xi, target in zip(X, y):
        output = sum(w * x for w, x in zip(weights, xi)) + bias
        prediction = 1 if output >= 0 else 0
        error = target - prediction
        # Update rule
        weights = [w + lr * error * x for w, x in zip(weights, xi)]
        bias += lr * error

# Final weights and bias
print("Trained weights:", weights)
print("Trained bias:", bias)

# Test the perceptron with a new flower sample
test_sample = [5.0, 1.4]  # Should be Setosa (0)
output = sum(w * x for w, x in zip(weights, test_sample)) + bias
prediction = 1 if output >= 0 else 0
print("Test sample:", test_sample)
print("Predicted class:", "Setosa (0)" if prediction == 0 else "Non-Setosa (1)")
